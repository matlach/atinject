<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.atinject</groupId>
	<artifactId>atinject</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>atinject</name>
	<description>atinject, realtime, scalable, cdi enhanced, 3-tiers architecture</description>
	<url>https://github.com/matlach/atinject</url>
	<inceptionYear>2013</inceptionYear>
	<organization>
		<name>the atinject project</name>
		<url>https://github.com/matlach/atinject</url>
	</organization>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>matlach</id>
			<name>mathieu lachance</name>
			<url>https://github.com/matlach</url>
		</developer>
	</developers>

	<modules>
		<module>atinject-core</module>
		<module>atinject-integration</module>
		<module>atinject-core-logging</module>
		<module>atinject-api</module>
		<module>atinject-core-annotation</module>
		<module>atinject-core-management</module>
		<module>atinject-core-scheduling</module>
		<module>atinject-core-configuration</module>
		<module>atinject-core-profiling</module>
		<module>atinject-core-scripting</module>
		<module>atinject-core-validation</module>
		<module>atinject-core-resource</module>
		<module>atinject-core-rendezvous</module>
	</modules>

	<scm>
		<url>https://github.com/matlach/atinject</url>
		<connection>scm:git:git://github.com/matlach/atinject.git</connection>
		<developerConnection>scm:git:https://github.com/matlach/atinject.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.jacoco.itReportPath>${project.basedir}/../target/jacoco-it.exec</sonar.jacoco.itReportPath>

		<slf4j.version>1.7.10</slf4j.version>
		<logback.version>1.1.2</logback.version>
		<weld.version>3.0.0.Alpha4</weld.version>
		<netty.version>5.0.0.Alpha1</netty.version>
		<infinispan.version>7.1.0.Final</infinispan.version>
		<jackson.version>2.5.1</jackson.version>
		<hibernate.validator.version>5.2.0.Alpha1</hibernate.validator.version>
		
		<junit.version>4.12</junit.version>
		<assertj.version>1.7.1</assertj.version>
		<arquillian.version>1.1.7.Final</arquillian.version>
		<arquillian.weld.se.embedded.version>1.0.0.CR8</arquillian.weld.se.embedded.version>
	</properties>

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${logback.version}</version>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.weld</groupId>
				<artifactId>weld-core</artifactId>
				<version>${weld.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.weld.se</groupId>
				<artifactId>weld-se-core</artifactId>
				<version>${weld.version}</version>
			</dependency>

			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-all</artifactId>
				<version>${netty.version}</version>
			</dependency>

			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-core</artifactId>
				<version>${infinispan.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-smile</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate.validator.version}</version>
			</dependency>

		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-core</artifactId>
			<version>3.1.0</version>
		</dependency>

		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<version>2.2.4</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>javax.el</artifactId>
			<version>2.2.4</version>
		</dependency>

			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>${arquillian.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>

			<dependency>
				<groupId>org.jboss.arquillian.container</groupId>
				<artifactId>arquillian-weld-se-embedded-1.1</artifactId>
				<version>${arquillian.weld.se.embedded.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jboss.weld</groupId>
			<artifactId>weld-core</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>weld-core-jsf</artifactId>
					<groupId>org.jboss.weld</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.jboss.weld.se</groupId>
			<artifactId>weld-se-core</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>jsr250-api</artifactId>
					<groupId>javax.annotation</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- TODO do not depends on -all artifact, and only what we require from 
			netty -->
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-all</artifactId>
		</dependency>

		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-core</artifactId>
			<exclusions>
				<!-- pulled from jgroups... -->
				<exclusion>
					<artifactId>log4j</artifactId>
					<groupId>log4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-smile</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jboss.arquillian.container</groupId>
			<artifactId>arquillian-weld-se-embedded-1.1</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
		</dependency>

	</dependencies>

	<build>
		<pluginManagement>
			<plugins>

				<!-- keep surefire and failsafe in sync -->
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.18.1</version>
				</plugin>
				<!-- keep surefire and failsafe in sync -->
				<plugin>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.18.1</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.sonar</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>5.0</version>
				</plugin>

				<plugin>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.4</version>
					<executions>
						<execution>
							<id>enforce-tools</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireJavaVersion>
										<!-- Enforce java 8 as minimum for compiling -->
										<version>[1.8.0,)</version>
									</requireJavaVersion>
									<requireMavenVersion>
										<version>[3.2.1,)</version>
									</requireMavenVersion>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.2</version>
					<configuration>
						<encoding>UTF-8</encoding>
						<compilerVersion>1.8</compilerVersion>
						<fork>true</fork>
						<source>1.8</source>
						<target>1.8</target>
						<configuration>
          					<compilerArgument>-parameters</compilerArgument>
        				</configuration>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<skipIfEmpty>true</skipIfEmpty>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<!-- property set by jacoco-maven-plugin -->
					<argLine>${itCoverageAgent}</argLine>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
							<!-- <goal>verify</goal> -->
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.2.201409121644</version>
				<executions>
					<execution>
						<id>prepare-integration-tests</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<phase>pre-integration-test</phase>
						<configuration>
							<destFile>${sonar.jacoco.itReportPath}</destFile>
							<propertyName>itCoverageAgent</propertyName>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
