<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.atinject</groupId>
	<artifactId>atinject</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>atinject</name>
	<url>https://github.com/matlach/atinject</url>
	<description>atinject, realtime, scalable, cdi enhanced, 3-tiers architecture</description>

	<organization>
		<name>the atinject project</name>
		<url>https://github.com/matlach/atinject</url>
	</organization>
	
	<developers>
		<developer>
			<id>matlach</id>
			<name>mathieu lachance</name>
			<url>https://github.com/matlach</url>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>
	<inceptionYear>2013</inceptionYear>

	<scm>
		<url>https://github.com/matlach/atinject</url>
		<connection>scm:git:git://github.com/matlach/atinject.git</connection>
		<developerConnection>scm:git:https://github.com/matlach/atinject.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        
		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.jacoco.itReportPath>${project.basedir}/../target/jacoco-it.exec</sonar.jacoco.itReportPath>

		<slf4j.version>1.7.7</slf4j.version>
		<logback.version>1.1.2</logback.version>
		<weld.version>2.2.1.Final</weld.version>
		<netty.version>5.0.0.Alpha1</netty.version>
		<infinispan.version>7.0.0.Alpha4</infinispan.version>
		<jackson.version>2.3.3</jackson.version>
		<hibernate.validator.version>5.1.1.Final</hibernate.validator.version>
		<pojo.mbean.version>1.1</pojo.mbean.version>
		<junit.version>4.11</junit.version>
		<assertj.version>1.6.0</assertj.version>
	</properties>

	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${logback.version}</version>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.weld</groupId>
				<artifactId>weld-core</artifactId>
				<version>${weld.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.weld.se</groupId>
				<artifactId>weld-se-core</artifactId>
				<version>${weld.version}</version>
			</dependency>

			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-all</artifactId>
				<version>${netty.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-core</artifactId>
				<version>${infinispan.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.dataformat</groupId>
				<artifactId>jackson-dataformat-smile</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate.validator.version}</version>
			</dependency>

			<dependency>
				<groupId>org.softee</groupId>
				<artifactId>pojo-mbean</artifactId>
				<version>${pojo.mbean.version}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>1.1.3.Final</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			
			<dependency>
				<groupId>org.jboss.arquillian.container</groupId>
				<artifactId>arquillian-weld-se-embedded-1.1</artifactId>
				<version>1.0.0.CR8</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${assertj.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jboss.weld</groupId>
			<artifactId>weld-core</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>weld-core-jsf</artifactId>
					<groupId>org.jboss.weld</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.jboss.weld.se</groupId>
			<artifactId>weld-se-core</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>jsr250-api</artifactId>
					<groupId>javax.annotation</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- TODO do not depends on -all artifact, and only what we require from netty -->
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-all</artifactId>
		</dependency>

		<dependency>
			<groupId>org.infinispan</groupId>
			<artifactId>infinispan-core</artifactId>
			<exclusions>
				<!-- pulled from jgroups... -->
				<exclusion>
					<artifactId>log4j</artifactId>
					<groupId>log4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-smile</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.softee</groupId>
			<artifactId>pojo-mbean</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jboss.arquillian.container</groupId>
			<artifactId>arquillian-weld-se-embedded-1.1</artifactId>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
		</dependency>

	</dependencies>

	<modules>
		<module>atinject-core</module>
		<module>atinject-integration</module>
		<module>atinject-api-analytic</module>
		<module>atinject-api-facebook</module>
		<module>atinject-api-permission</module>
		<module>atinject-api-role</module>
		<module>atinject-api-role-permission</module>
		<module>atinject-api-system-property</module>
		<module>atinject-api-user</module>
		<module>atinject-api-user-affinity</module>
		<module>atinject-api-user-authentication</module>
		<module>atinject-api-user-authorization</module>
		<module>atinject-api-user-credential</module>
		<module>atinject-api-user-lockout</module>
		<module>atinject-api-user-permission</module>
		<module>atinject-api-user-preference</module>
		<module>atinject-api-user-registration</module>
		<module>atinject-api-user-registration-role</module>
		<module>atinject-api-user-role</module>
		<module>atinject-api-user-relocation</module>
		<module>atinject-api-user-session</module>
		<module>atinject-api-user-topology</module>
		<module>atinject-api-user-websocket</module>
		<module>atinject-core-logging</module>
	</modules>

	<build>


		<pluginManagement>
			<plugins>

				<!-- keep surefire and failsafe in sync -->
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.17</version>
				</plugin>
				<!-- keep surefire and failsafe in sync -->
				<plugin>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.17</version>
				</plugin>

				<plugin>
				    <groupId>org.codehaus.sonar</groupId>
				    <artifactId>sonar-maven-plugin</artifactId>
				    <version>4.2</version>
				</plugin>

				<plugin>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.3.1</version>
					<executions>
						<execution>
							<id>enforce-tools</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireJavaVersion>
										<!-- Enforce java 8 as minimum for compiling -->
										<version>[1.8.0,)</version>
									</requireJavaVersion>
									<requireMavenVersion>
										<version>[3.0.2,)</version>
									</requireMavenVersion>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<encoding>UTF-8</encoding>
						<compilerVersion>1.8</compilerVersion>
						<fork>true</fork>
						<source>1.8</source>
						<target>1.8</target>
						<debug>true</debug>
						<optimize>true</optimize>
						<!--
						<showDeprecation>true</showDeprecation>
						<showWarnings>true</showWarnings> 
						<compilerArguments>
							<Xlint:-options/>
							<Xlint:unchecked/>
							<Xlint:deprecation/> 
						</compilerArguments>
						-->
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>

	<plugins>
	<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.2.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-failsafe-plugin</artifactId>
			<configuration>
				<!-- property set by jacoco-maven-plugin -->
				<argLine>${itCoverageAgent}</argLine>
			</configuration>
			<executions>
				<execution>
					<id>integration-test</id>
					<goals>
						<goal>integration-test</goal>
						<!-- <goal>verify</goal> -->
					</goals>
				</execution>
			</executions>
		</plugin>

		<plugin>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>0.7.0.201403182114</version>
			<executions>
				<execution>
					<id>prepare-integration-tests</id>
					<goals>
						<goal>prepare-agent</goal>
					</goals>
					<phase>pre-integration-test</phase>
					<configuration>
						<destFile>${sonar.jacoco.itReportPath}</destFile>
						<propertyName>itCoverageAgent</propertyName>
					</configuration>
				</execution>
			</executions>
		</plugin>

	</plugins>

	</build>



</project>